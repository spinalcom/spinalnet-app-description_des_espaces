{"ast":null,"code":"import _regeneratorRuntime from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getBuildingInfosApi, getBuildingAreaApi, getFloorAreaApi, getFloorRoomListApi, getRoomAreaApi, getRoomTicketListApi } from '../api';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    buildingInfos: {},\n    buildingArea: 0,\n    floorArea: 0,\n    floorList: [{\n      name: 'rdc'\n    }],\n    roomList: [],\n    roomInfo: [],\n    roomAreas: []\n  },\n  getters: {\n    buildingInfos: function buildingInfos(state) {\n      return state.buildingInfos;\n    },\n    floorList: function floorList(state) {\n      return state.floorList;\n    },\n    buildingArea: function buildingArea(state) {\n      return state.buildingArea;\n    },\n    floorArea: function floorArea(state) {\n      return state.floorArea;\n    },\n    roomList: function roomList(state) {\n      return state.roomList;\n    },\n    roomAreas: function roomAreas(state) {\n      return state.roomAreas;\n    },\n    roomInfo: function roomInfo(state) {\n      return state.roomInfo;\n    }\n  },\n  mutations: {\n    setBuildingInfos: function setBuildingInfos(state, buildingInfo, floorList) {\n      return state.buildingInfos = buildingInfo, state.floorList = floorList;\n    },\n    setBuildingArea: function setBuildingArea(state, area) {\n      return state.buildingArea = area;\n    },\n    setFloorArea: function setFloorArea(state, area) {\n      return state.floorArea = area;\n    },\n    setFloorRoomList: function setFloorRoomList(state, resp) {\n      return state.roomList = resp;\n    },\n    setRoomArea: function setRoomArea(state, roomArray) {\n      return state.roomAreas = roomArray;\n    },\n    setRoomInfo: function setRoomInfo(state, info) {\n      return state.roomInfo = info;\n    }\n  },\n  actions: {\n    getBuildingInfos: function getBuildingInfos(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, resp, info, floorList;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return getBuildingInfosApi();\n\n              case 3:\n                resp = _context.sent;\n\n                info = function info() {\n                  return {\n                    id: 0,\n                    name: '',\n                    area: 0,\n                    ticket: 0\n                  };\n                };\n\n                floorList = new Array(resp.children[0].children.length).fill(null).map(info);\n                console.log('Building info', resp);\n                resp.children.map(function (building) {\n                  building.children.map(function (floor, index) {\n                    console.log(floor.name);\n                    floorList[index].name = floor.name;\n                    floorList[index].id = floor.dynamicId;\n                  });\n                  console.log(floorList);\n                });\n                commit('setBuildingInfos', resp, floorList);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getBuildingArea: function getBuildingArea(_ref2) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.next = 3;\n                return getBuildingAreaApi();\n\n              case 3:\n                resp = _context2.sent;\n                // console.log('area',resp.area);\n                commit('setBuildingArea', resp.area);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getFloorArea: function getFloorArea(_ref3, id) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                _context3.next = 3;\n                return getFloorAreaApi(id);\n\n              case 3:\n                resp = _context3.sent;\n                console.log('area', resp.area);\n                commit('setFloorArea', resp.area);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getFloorRoomList: function getFloorRoomList(_ref4, id) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var commit, resp, info, roomInfo;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref4.commit;\n                _context5.next = 3;\n                return getFloorRoomListApi(id);\n\n              case 3:\n                resp = _context5.sent;\n\n                info = function info() {\n                  return {\n                    id: 0,\n                    name: '',\n                    area: 0,\n                    ticket: 0\n                  };\n                };\n\n                roomInfo = new Array(resp.length).fill(null).map(info);\n                _this.roomList = resp;\n                resp.map( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(room, index) {\n                    var areaInfo, roomTicket;\n                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return getRoomAreaApi(room.dynamicId);\n\n                          case 2:\n                            areaInfo = _context4.sent;\n                            _context4.next = 5;\n                            return getRoomTicketListApi(room.dynamicId);\n\n                          case 5:\n                            roomTicket = _context4.sent;\n                            console.log(roomTicket); // roomInfo[index].name = room.name;\n                            // roomInfo[index].area = areaInfo.area      \n                            // roomInfo.fill({name: room.name, area: areaInfo.area})\n\n                            roomInfo[index].id = room.dynamicId;\n                            roomInfo[index].name = room.name;\n                            roomInfo[index].area = areaInfo.area;\n                            roomInfo[index].ticket = roomTicket.length; // roomArray.push(areaInfo.area);\n\n                          case 11:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x, _x2) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }());\n                console.log(roomInfo); // commit('setFloorRoomList', resp);\n                // commit('setRoomArea',roomArray)\n\n                commit('setRoomInfo', roomInfo);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    } // async getRoomArea({commit}){\n    //   this.roomList.forEach(room => {\n    //     const resp =  getRoomAreaApi(room.dynamicId)\n    //     console.log(resp);\n    //     commit('setRoomArea', resp);\n    //   });\n    // }\n\n  }\n});","map":{"version":3,"names":["Vue","Vuex","getBuildingInfosApi","getBuildingAreaApi","getFloorAreaApi","getFloorRoomListApi","getRoomAreaApi","getRoomTicketListApi","use","Store","state","buildingInfos","buildingArea","floorArea","floorList","name","roomList","roomInfo","roomAreas","getters","mutations","setBuildingInfos","buildingInfo","setBuildingArea","area","setFloorArea","setFloorRoomList","resp","setRoomArea","roomArray","setRoomInfo","info","actions","getBuildingInfos","commit","id","ticket","Array","children","length","fill","map","console","log","building","floor","index","dynamicId","getBuildingArea","getFloorArea","getFloorRoomList","room","areaInfo","roomTicket"],"sources":["/home/ferdi/Bureau/Dashboards/description-espaces/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {getBuildingInfosApi, getBuildingAreaApi, getFloorAreaApi, getFloorRoomListApi, getRoomAreaApi, getRoomTicketListApi} from '../api'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    buildingInfos:{},\n    buildingArea:0,\n    floorArea:0,\n    floorList:[{name: 'rdc'}],\n    roomList:[],\n    roomInfo:[],\n    roomAreas:[]\n  },\n  getters: {\n    buildingInfos: (state) => state.buildingInfos,\n    floorList: (state) => state.floorList,\n    buildingArea: (state) => state.buildingArea,\n    floorArea: (state) => state.floorArea,\n    roomList: (state) => state.roomList,\n    roomAreas: (state) => state.roomAreas,\n    roomInfo: (state) => state.roomInfo\n  },\n  mutations: {\n    setBuildingInfos:(state, buildingInfo, floorList) => (\n      state.buildingInfos = buildingInfo,\n      state.floorList = floorList ),\n    setBuildingArea:(state, area)=> (state.buildingArea = area),\n    setFloorArea: (state, area) => (state.floorArea = area),\n    setFloorRoomList: (state, resp) => (state.roomList = resp),\n    setRoomArea: (state, roomArray)=> (state.roomAreas = roomArray),\n    setRoomInfo: (state, info) => (state.roomInfo = info)\n  },\n  actions: {\n    async getBuildingInfos({commit}){\n      const resp = await getBuildingInfosApi()\n      const info = () => {\n        return {id: 0, name: '', area: 0, ticket: 0}\n      }\n      const floorList = new Array(resp.children[0].children.length).fill(null).map(info);\n      console.log('Building info',resp);\n      resp.children.map( building => {\n        building.children.map( (floor, index) =>{\n          console.log(floor.name);\n          floorList[index].name = floor.name\n          floorList[index].id = floor.dynamicId\n        })\n        console.log(floorList);\n      });\n      commit('setBuildingInfos', resp, floorList);\n\n    },\n    async getBuildingArea({commit}){\n      const resp = await getBuildingAreaApi()\n      // console.log('area',resp.area);\n      commit('setBuildingArea', resp.area);\n\n    },\n    async getFloorArea({commit}, id){\n      const resp = await getFloorAreaApi(id)\n      console.log('area',resp.area);\n      commit('setFloorArea', resp.area);\n\n    },\n    async getFloorRoomList({commit}, id){\n      const resp = await getFloorRoomListApi(id)\n      const info = () => {\n        return {id: 0, name: '', area: 0, ticket: 0}\n      }\n      const roomInfo = new Array(resp.length).fill(null).map(info);\n      this.roomList = resp;\n      resp.map(async (room, index) => {\n        let areaInfo = await getRoomAreaApi(room.dynamicId); \n        let roomTicket = await getRoomTicketListApi(room.dynamicId); \n        console.log(roomTicket);\n        // roomInfo[index].name = room.name;\n        // roomInfo[index].area = areaInfo.area      \n        // roomInfo.fill({name: room.name, area: areaInfo.area})\n        roomInfo[index].id = room.dynamicId;\n        roomInfo[index].name = room.name;\n        roomInfo[index].area = areaInfo.area;\n        roomInfo[index].ticket = roomTicket.length;\n\n        // roomArray.push(areaInfo.area);\n      });\n      console.log(roomInfo);\n      // commit('setFloorRoomList', resp);\n      // commit('setRoomArea',roomArray)\n      commit('setRoomInfo',roomInfo )\n    },\n    // async getRoomArea({commit}){\n    //   this.roomList.forEach(room => {\n    //     const resp =  getRoomAreaApi(room.dynamicId)\n    //     console.log(resp);\n    //     commit('setRoomArea', resp);\n    //   });\n\n    // }\n  },\n  \n})\n"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,mBAAR,EAA6BC,kBAA7B,EAAiDC,eAAjD,EAAkEC,mBAAlE,EAAuFC,cAAvF,EAAuGC,oBAAvG,QAAkI,QAAlI;AACAP,GAAG,CAACQ,GAAJ,CAAQP,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACQ,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,aAAa,EAAC,EADT;IAELC,YAAY,EAAC,CAFR;IAGLC,SAAS,EAAC,CAHL;IAILC,SAAS,EAAC,CAAC;MAACC,IAAI,EAAE;IAAP,CAAD,CAJL;IAKLC,QAAQ,EAAC,EALJ;IAMLC,QAAQ,EAAC,EANJ;IAOLC,SAAS,EAAC;EAPL,CADqB;EAU5BC,OAAO,EAAE;IACPR,aAAa,EAAE,uBAACD,KAAD;MAAA,OAAWA,KAAK,CAACC,aAAjB;IAAA,CADR;IAEPG,SAAS,EAAE,mBAACJ,KAAD;MAAA,OAAWA,KAAK,CAACI,SAAjB;IAAA,CAFJ;IAGPF,YAAY,EAAE,sBAACF,KAAD;MAAA,OAAWA,KAAK,CAACE,YAAjB;IAAA,CAHP;IAIPC,SAAS,EAAE,mBAACH,KAAD;MAAA,OAAWA,KAAK,CAACG,SAAjB;IAAA,CAJJ;IAKPG,QAAQ,EAAE,kBAACN,KAAD;MAAA,OAAWA,KAAK,CAACM,QAAjB;IAAA,CALH;IAMPE,SAAS,EAAE,mBAACR,KAAD;MAAA,OAAWA,KAAK,CAACQ,SAAjB;IAAA,CANJ;IAOPD,QAAQ,EAAE,kBAACP,KAAD;MAAA,OAAWA,KAAK,CAACO,QAAjB;IAAA;EAPH,CAVmB;EAmB5BG,SAAS,EAAE;IACTC,gBAAgB,EAAC,0BAACX,KAAD,EAAQY,YAAR,EAAsBR,SAAtB;MAAA,OACfJ,KAAK,CAACC,aAAN,GAAsBW,YAAtB,EACAZ,KAAK,CAACI,SAAN,GAAkBA,SAFH;IAAA,CADR;IAITS,eAAe,EAAC,yBAACb,KAAD,EAAQc,IAAR;MAAA,OAAiBd,KAAK,CAACE,YAAN,GAAqBY,IAAtC;IAAA,CAJP;IAKTC,YAAY,EAAE,sBAACf,KAAD,EAAQc,IAAR;MAAA,OAAkBd,KAAK,CAACG,SAAN,GAAkBW,IAApC;IAAA,CALL;IAMTE,gBAAgB,EAAE,0BAAChB,KAAD,EAAQiB,IAAR;MAAA,OAAkBjB,KAAK,CAACM,QAAN,GAAiBW,IAAnC;IAAA,CANT;IAOTC,WAAW,EAAE,qBAAClB,KAAD,EAAQmB,SAAR;MAAA,OAAsBnB,KAAK,CAACQ,SAAN,GAAkBW,SAAxC;IAAA,CAPJ;IAQTC,WAAW,EAAE,qBAACpB,KAAD,EAAQqB,IAAR;MAAA,OAAkBrB,KAAK,CAACO,QAAN,GAAiBc,IAAnC;IAAA;EARJ,CAnBiB;EA6B5BC,OAAO,EAAE;IACDC,gBADC,kCACyB;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAARC,MAAQ,QAARA,MAAQ;gBAAA;gBAAA,OACXhC,mBAAmB,EADR;;cAAA;gBACxByB,IADwB;;gBAExBI,IAFwB,GAEjB,SAAPA,IAAO,GAAM;kBACjB,OAAO;oBAACI,EAAE,EAAE,CAAL;oBAAQpB,IAAI,EAAE,EAAd;oBAAkBS,IAAI,EAAE,CAAxB;oBAA2BY,MAAM,EAAE;kBAAnC,CAAP;gBACD,CAJ6B;;gBAKxBtB,SALwB,GAKZ,IAAIuB,KAAJ,CAAUV,IAAI,CAACW,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0BC,MAApC,EAA4CC,IAA5C,CAAiD,IAAjD,EAAuDC,GAAvD,CAA2DV,IAA3D,CALY;gBAM9BW,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BhB,IAA5B;gBACAA,IAAI,CAACW,QAAL,CAAcG,GAAd,CAAmB,UAAAG,QAAQ,EAAI;kBAC7BA,QAAQ,CAACN,QAAT,CAAkBG,GAAlB,CAAuB,UAACI,KAAD,EAAQC,KAAR,EAAiB;oBACtCJ,OAAO,CAACC,GAAR,CAAYE,KAAK,CAAC9B,IAAlB;oBACAD,SAAS,CAACgC,KAAD,CAAT,CAAiB/B,IAAjB,GAAwB8B,KAAK,CAAC9B,IAA9B;oBACAD,SAAS,CAACgC,KAAD,CAAT,CAAiBX,EAAjB,GAAsBU,KAAK,CAACE,SAA5B;kBACD,CAJD;kBAKAL,OAAO,CAACC,GAAR,CAAY7B,SAAZ;gBACD,CAPD;gBAQAoB,MAAM,CAAC,kBAAD,EAAqBP,IAArB,EAA2Bb,SAA3B,CAAN;;cAf8B;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAiB/B,CAlBM;IAmBDkC,eAnBC,kCAmBwB;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAARd,MAAQ,SAARA,MAAQ;gBAAA;gBAAA,OACV/B,kBAAkB,EADR;;cAAA;gBACvBwB,IADuB;gBAE7B;gBACAO,MAAM,CAAC,iBAAD,EAAoBP,IAAI,CAACH,IAAzB,CAAN;;cAH6B;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAK9B,CAxBM;IAyBDyB,YAzBC,+BAyBsBd,EAzBtB,EAyByB;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAZD,MAAY,SAAZA,MAAY;gBAAA;gBAAA,OACX9B,eAAe,CAAC+B,EAAD,CADJ;;cAAA;gBACxBR,IADwB;gBAE9Be,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBhB,IAAI,CAACH,IAAxB;gBACAU,MAAM,CAAC,cAAD,EAAiBP,IAAI,CAACH,IAAtB,CAAN;;cAH8B;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAK/B,CA9BM;IA+BD0B,gBA/BC,mCA+B0Bf,EA/B1B,EA+B6B;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAZD,MAAY,SAAZA,MAAY;gBAAA;gBAAA,OACf7B,mBAAmB,CAAC8B,EAAD,CADJ;;cAAA;gBAC5BR,IAD4B;;gBAE5BI,IAF4B,GAErB,SAAPA,IAAO,GAAM;kBACjB,OAAO;oBAACI,EAAE,EAAE,CAAL;oBAAQpB,IAAI,EAAE,EAAd;oBAAkBS,IAAI,EAAE,CAAxB;oBAA2BY,MAAM,EAAE;kBAAnC,CAAP;gBACD,CAJiC;;gBAK5BnB,QAL4B,GAKjB,IAAIoB,KAAJ,CAAUV,IAAI,CAACY,MAAf,EAAuBC,IAAvB,CAA4B,IAA5B,EAAkCC,GAAlC,CAAsCV,IAAtC,CALiB;gBAMlC,KAAI,CAACf,QAAL,GAAgBW,IAAhB;gBACAA,IAAI,CAACc,GAAL;kBAAA,uEAAS,kBAAOU,IAAP,EAAaL,KAAb;oBAAA;oBAAA;sBAAA;wBAAA;0BAAA;4BAAA;4BAAA,OACcxC,cAAc,CAAC6C,IAAI,CAACJ,SAAN,CAD5B;;0BAAA;4BACHK,QADG;4BAAA;4BAAA,OAEgB7C,oBAAoB,CAAC4C,IAAI,CAACJ,SAAN,CAFpC;;0BAAA;4BAEHM,UAFG;4BAGPX,OAAO,CAACC,GAAR,CAAYU,UAAZ,EAHO,CAIP;4BACA;4BACA;;4BACApC,QAAQ,CAAC6B,KAAD,CAAR,CAAgBX,EAAhB,GAAqBgB,IAAI,CAACJ,SAA1B;4BACA9B,QAAQ,CAAC6B,KAAD,CAAR,CAAgB/B,IAAhB,GAAuBoC,IAAI,CAACpC,IAA5B;4BACAE,QAAQ,CAAC6B,KAAD,CAAR,CAAgBtB,IAAhB,GAAuB4B,QAAQ,CAAC5B,IAAhC;4BACAP,QAAQ,CAAC6B,KAAD,CAAR,CAAgBV,MAAhB,GAAyBiB,UAAU,CAACd,MAApC,CAVO,CAYP;;0BAZO;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA,CAAT;;kBAAA;oBAAA;kBAAA;gBAAA;gBAcAG,OAAO,CAACC,GAAR,CAAY1B,QAAZ,EArBkC,CAsBlC;gBACA;;gBACAiB,MAAM,CAAC,aAAD,EAAejB,QAAf,CAAN;;cAxBkC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAyBnC,CAxDM,CAyDP;IACA;IACA;IACA;IACA;IACA;IAEA;;EAhEO;AA7BmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}