{"ast":null,"code":"import _regeneratorRuntime from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getBuildingInfosApi } from '../api';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    buildingInfos: []\n  },\n  getters: {},\n  mutations: {\n    buildingInfos: function buildingInfos(state, buildingInfo) {\n      return state.buildingInfos = buildingInfo;\n    }\n  },\n  actions: {\n    getBuildingInfo: function getBuildingInfo(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return getBuildingInfosApi();\n\n              case 3:\n                resp = _context.sent;\n                // console.log(resp);\n                commit('buildingInfos', resp);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","getBuildingInfosApi","use","Store","state","buildingInfos","getters","mutations","buildingInfo","actions","getBuildingInfo","commit","resp","modules"],"sources":["/home/ferdi/Bureau/Dashboards/description-espaces/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {getBuildingInfosApi} from '../api'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    buildingInfos:[]\n  },\n  getters: {\n  },\n  mutations: {\n    buildingInfos:(state, buildingInfo) => (state.buildingInfos = buildingInfo )\n  },\n  actions: {\n    async getBuildingInfo({commit}){\n      const resp = await getBuildingInfosApi()\n      // console.log(resp);\n      commit('buildingInfos', resp);\n\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,mBAAR,QAAkC,QAAlC;AACAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,aAAa,EAAC;EADT,CADqB;EAI5BC,OAAO,EAAE,EAJmB;EAM5BC,SAAS,EAAE;IACTF,aAAa,EAAC,uBAACD,KAAD,EAAQI,YAAR;MAAA,OAA0BJ,KAAK,CAACC,aAAN,GAAsBG,YAAhD;IAAA;EADL,CANiB;EAS5BC,OAAO,EAAE;IACDC,eADC,iCACwB;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAARC,MAAQ,QAARA,MAAQ;gBAAA;gBAAA,OACVV,mBAAmB,EADT;;cAAA;gBACvBW,IADuB;gBAE7B;gBACAD,MAAM,CAAC,eAAD,EAAkBC,IAAlB,CAAN;;cAH6B;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAK9B;EANM,CATmB;EAiB5BC,OAAO,EAAE;AAjBmB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}