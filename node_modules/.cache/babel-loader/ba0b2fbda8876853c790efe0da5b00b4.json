{"ast":null,"code":"import _regeneratorRuntime from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getBuildingInfosApi, getBuildingAreaApi, getFloorAreaApi, getFloorRoomListApi, getRoomAreaApi } from '../api';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    buildingInfos: {},\n    buildingArea: 0,\n    floorArea: 0,\n    roomList: [],\n    roomInfo: {},\n    roomAreas: []\n  },\n  getters: {\n    buildingInfos: function buildingInfos(state) {\n      return state.buildingInfos;\n    },\n    buildingArea: function buildingArea(state) {\n      return state.buildingArea;\n    },\n    floorArea: function floorArea(state) {\n      return state.floorArea;\n    },\n    roomList: function roomList(state) {\n      return state.roomList;\n    },\n    roomAreas: function roomAreas(state) {\n      return state.roomAreas;\n    },\n    roomInfo: function roomInfo(state) {\n      return state.roomInfo;\n    }\n  },\n  mutations: {\n    setBuildingInfos: function setBuildingInfos(state, buildingInfo) {\n      return state.buildingInfos = buildingInfo;\n    },\n    setBuildingArea: function setBuildingArea(state, area) {\n      return state.buildingArea = area;\n    },\n    setFloorArea: function setFloorArea(state, area) {\n      return state.floorArea = area;\n    },\n    setFloorRoomList: function setFloorRoomList(state, resp) {\n      return state.roomList = resp;\n    },\n    setRoomArea: function setRoomArea(state, roomArray) {\n      return state.roomAreas = roomArray;\n    },\n    setRoomInfo: function setRoomInfo(state, info) {\n      return state.roomInfo = info;\n    }\n  },\n  actions: {\n    getBuildingInfos: function getBuildingInfos(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return getBuildingInfosApi();\n\n              case 3:\n                resp = _context.sent;\n                // console.log('info',resp);\n                commit('setBuildingInfos', resp);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getBuildingArea: function getBuildingArea(_ref2) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.next = 3;\n                return getBuildingAreaApi();\n\n              case 3:\n                resp = _context2.sent;\n                // console.log('area',resp.area);\n                commit('setBuildingArea', resp.area);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getFloorArea: function getFloorArea(_ref3, id) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                _context3.next = 3;\n                return getFloorAreaApi(id);\n\n              case 3:\n                resp = _context3.sent;\n                console.log('area', resp.area);\n                commit('setFloorArea', resp.area);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getFloorRoomList: function getFloorRoomList(_ref4, id) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var commit, resp, info;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref4.commit;\n                _context5.next = 3;\n                return getFloorRoomListApi(id);\n\n              case 3:\n                resp = _context5.sent;\n                // let roomArray = [];\n                info = new Array(resp.length).fill({\n                  name: '',\n                  area: 0\n                }); // let info = [{}];\n\n                _this.roomList = resp;\n                resp.map( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(room, index) {\n                    var areaInfo;\n                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return getRoomAreaApi(room.dynamicId);\n\n                          case 2:\n                            areaInfo = _context4.sent;\n                            console.log(index, room.name); // info[index].name = room.name;\n                            // info[index].area = areaInfo.area      \n                            // info.fill({name: room.name, area: areaInfo.area})\n\n                            info[index].name = room.name;\n                            info[index].area = areaInfo.area; // roomArray.push(areaInfo.area);\n\n                          case 6:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x, _x2) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }());\n                console.log(info); // commit('setFloorRoomList', resp);\n                // commit('setRoomArea',roomArray)\n\n                commit('setRoomInfo', info);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    } // async getRoomArea({commit}){\n    //   this.roomList.forEach(room => {\n    //     const resp =  getRoomAreaApi(room.dynamicId)\n    //     console.log(resp);\n    //     commit('setRoomArea', resp);\n    //   });\n    // }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","getBuildingInfosApi","getBuildingAreaApi","getFloorAreaApi","getFloorRoomListApi","getRoomAreaApi","use","Store","state","buildingInfos","buildingArea","floorArea","roomList","roomInfo","roomAreas","getters","mutations","setBuildingInfos","buildingInfo","setBuildingArea","area","setFloorArea","setFloorRoomList","resp","setRoomArea","roomArray","setRoomInfo","info","actions","getBuildingInfos","commit","getBuildingArea","getFloorArea","id","console","log","getFloorRoomList","Array","length","fill","name","map","room","index","dynamicId","areaInfo","modules"],"sources":["/home/ferdi/Bureau/Dashboards/description-espaces/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {getBuildingInfosApi, getBuildingAreaApi, getFloorAreaApi, getFloorRoomListApi, getRoomAreaApi} from '../api'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    buildingInfos:{},\n    buildingArea:0,\n    floorArea:0,\n    roomList:[],\n    roomInfo:{},\n    roomAreas:[]\n  },\n  getters: {\n    buildingInfos: (state) => state.buildingInfos,\n    buildingArea: (state) => state.buildingArea,\n    floorArea: (state) => state.floorArea,\n    roomList: (state) => state.roomList,\n    roomAreas: (state) => state.roomAreas,\n    roomInfo: (state) => state.roomInfo\n  },\n  mutations: {\n    setBuildingInfos:(state, buildingInfo) => (state.buildingInfos = buildingInfo ),\n    setBuildingArea:(state, area)=> (state.buildingArea = area),\n    setFloorArea: (state, area) => (state.floorArea = area),\n    setFloorRoomList: (state, resp) => (state.roomList = resp),\n    setRoomArea: (state, roomArray)=> (state.roomAreas = roomArray),\n    setRoomInfo: (state, info) => (state.roomInfo = info)\n  },\n  actions: {\n    async getBuildingInfos({commit}){\n      const resp = await getBuildingInfosApi()\n      // console.log('info',resp);\n      commit('setBuildingInfos', resp);\n\n    },\n    async getBuildingArea({commit}){\n      const resp = await getBuildingAreaApi()\n      // console.log('area',resp.area);\n      commit('setBuildingArea', resp.area);\n\n    },\n    async getFloorArea({commit}, id){\n      const resp = await getFloorAreaApi(id)\n      console.log('area',resp.area);\n      commit('setFloorArea', resp.area);\n\n    },\n    async getFloorRoomList({commit}, id){\n      const resp = await getFloorRoomListApi(id)\n      // let roomArray = [];\n      const info = new Array(resp.length).fill({ name: '', area: 0 });\n      // let info = [{}];\n      this.roomList = resp;\n      resp.map(async (room, index) => {\n        let areaInfo = await getRoomAreaApi(room.dynamicId); \n        console.log(index,room.name);\n\n        // info[index].name = room.name;\n        // info[index].area = areaInfo.area      \n        // info.fill({name: room.name, area: areaInfo.area})\n        info[index].name = room.name;\n        info[index].area = areaInfo.area;\n\n        // roomArray.push(areaInfo.area);\n      });\n      console.log(info);\n      // commit('setFloorRoomList', resp);\n      // commit('setRoomArea',roomArray)\n      commit('setRoomInfo',info )\n    },\n    // async getRoomArea({commit}){\n    //   this.roomList.forEach(room => {\n    //     const resp =  getRoomAreaApi(room.dynamicId)\n    //     console.log(resp);\n    //     commit('setRoomArea', resp);\n    //   });\n\n    // }\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}