{"ast":null,"code":"import _regeneratorRuntime from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getBuildingInfosApi, getBuildingAreaApi, getFloorAreaApi, getFloorRoomListApi, getRoomAreaApi } from '../api';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    buildingInfos: {},\n    buildingArea: 0,\n    floorArea: 0,\n    roomList: [],\n    roomAreas: 0\n  },\n  getters: {\n    buildingInfos: function buildingInfos(state) {\n      return state.buildingInfos;\n    },\n    buildingArea: function buildingArea(state) {\n      return state.buildingArea;\n    },\n    floorArea: function floorArea(state) {\n      return state.floorArea;\n    },\n    roomList: function roomList(state) {\n      return state.roomList;\n    },\n    roomAreas: function roomAreas(state) {\n      return state.roomAreas;\n    }\n  },\n  mutations: {\n    setBuildingInfos: function setBuildingInfos(state, buildingInfo) {\n      return state.buildingInfos = buildingInfo;\n    },\n    setBuildingArea: function setBuildingArea(state, area) {\n      return state.buildingArea = area;\n    },\n    setFloorArea: function setFloorArea(state, area) {\n      return state.floorArea = area;\n    },\n    setFloorRoomList: function setFloorRoomList(state, resp) {\n      return state.roomList = resp;\n    },\n    setRoomArea: function setRoomArea(state, resp) {\n      return state.roomAreas = resp;\n    }\n  },\n  actions: {\n    getBuildingInfos: function getBuildingInfos(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return getBuildingInfosApi();\n\n              case 3:\n                resp = _context.sent;\n                console.log('info', resp);\n                commit('setBuildingInfos', resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getBuildingArea: function getBuildingArea(_ref2) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.next = 3;\n                return getBuildingAreaApi();\n\n              case 3:\n                resp = _context2.sent;\n                console.log('area', resp.area);\n                commit('setBuildingArea', resp.area);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    getFloorArea: function getFloorArea(_ref3, id) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                _context3.next = 3;\n                return getFloorAreaApi(id);\n\n              case 3:\n                resp = _context3.sent;\n                console.log('area', resp.area);\n                commit('setFloorArea', resp.area);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getFloorRoomList: function getFloorRoomList(_ref4, id) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref4.commit;\n                _context4.next = 3;\n                return getFloorRoomListApi(id);\n\n              case 3:\n                resp = _context4.sent;\n                _this.roomList = resp;\n                resp.forEach(function (room) {\n                  var area = getRoomAreaApi(room.dynamicId);\n\n                  _this.roomAreas.push(area);\n\n                  console.log(area);\n                });\n                console.log('roomList', _this.roomList);\n                commit('setFloorRoomList', resp);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    getRoomArea: function getRoomArea(_ref5, id) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var commit, resp;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref5.commit;\n                _context5.next = 3;\n                return getRoomAreaApi(id);\n\n              case 3:\n                resp = _context5.sent;\n                _this2.roomAreas = resp;\n                console.log('roomAreas', _this2.roomAreas);\n                commit('setRoomArea', resp);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","getBuildingInfosApi","getBuildingAreaApi","getFloorAreaApi","getFloorRoomListApi","getRoomAreaApi","use","Store","state","buildingInfos","buildingArea","floorArea","roomList","roomAreas","getters","mutations","setBuildingInfos","buildingInfo","setBuildingArea","area","setFloorArea","setFloorRoomList","resp","setRoomArea","actions","getBuildingInfos","commit","console","log","getBuildingArea","getFloorArea","id","getFloorRoomList","forEach","room","dynamicId","push","getRoomArea","modules"],"sources":["/home/ferdi/Bureau/Dashboards/description-espaces/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {getBuildingInfosApi, getBuildingAreaApi, getFloorAreaApi, getFloorRoomListApi, getRoomAreaApi} from '../api'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    buildingInfos:{},\n    buildingArea:0,\n    floorArea:0,\n    roomList:[],\n    roomAreas:0\n  },\n  getters: {\n    buildingInfos: (state) => state.buildingInfos,\n    buildingArea: (state) => state.buildingArea,\n    floorArea: (state) => state.floorArea,\n    roomList: (state) => state.roomList,\n    roomAreas: (state) => state.roomAreas\n  },\n  mutations: {\n    setBuildingInfos:(state, buildingInfo) => (state.buildingInfos = buildingInfo ),\n    setBuildingArea:(state, area)=> (state.buildingArea = area),\n    setFloorArea: (state, area) => (state.floorArea = area),\n    setFloorRoomList: (state, resp) => (state.roomList = resp),\n    setRoomArea: (state, resp)=> (state.roomAreas = resp)\n  },\n  actions: {\n    async getBuildingInfos({commit}){\n      const resp = await getBuildingInfosApi()\n      console.log('info',resp);\n      commit('setBuildingInfos', resp);\n\n    },\n    async getBuildingArea({commit}){\n      const resp = await getBuildingAreaApi()\n      console.log('area',resp.area);\n      commit('setBuildingArea', resp.area);\n\n    },\n    async getFloorArea({commit}, id){\n      const resp = await getFloorAreaApi(id)\n      console.log('area',resp.area);\n      commit('setFloorArea', resp.area);\n\n    },\n    async getFloorRoomList({commit}, id){\n      const resp = await getFloorRoomListApi(id)\n      this.roomList = resp;\n      resp.forEach(room => {\n        let area =  getRoomAreaApi(room.dynamicId);\n        this.roomAreas.push(area);\n        console.log(area);\n      });\n      console.log('roomList',this.roomList);\n      commit('setFloorRoomList', resp);\n\n    },\n    async getRoomArea({commit}, id){\n      const resp = await getRoomAreaApi(id)\n      this.roomAreas = resp;\n      console.log('roomAreas',this.roomAreas);\n      commit('setRoomArea', resp);\n\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}