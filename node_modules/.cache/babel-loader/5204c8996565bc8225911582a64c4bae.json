{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/home/ferdi/Bureau/Dashboards/description-espaces/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nvar axios = require('axios');\n\nvar path = 'http://localhost:8056/api/v1/';\nvar API = {\n  getBuildingAsync: function getBuildingAsync() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var requestUrl, result, body;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              requestUrl = \"\".concat(path, \"geographicContext/space\");\n              _context.next = 3;\n              return axios.get(requestUrl);\n\n            case 3:\n              result = _context.sent;\n              body = result.data;\n              console.log(body);\n              return _context.abrupt(\"return\", body.children.find(function (b) {\n                return b.type == \"geographicBuilding\";\n              }));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nmodule.exports = API;","map":{"version":3,"names":["axios","require","path","API","getBuildingAsync","requestUrl","get","result","body","data","console","log","children","find","b","type","module","exports"],"sources":["/home/ferdi/Bureau/Dashboards/description-espaces/src/api/index.js"],"sourcesContent":["const axios = require('axios');\nconst path = 'http://localhost:8056/api/v1/';\n\nconst API = {   \n  async getBuildingAsync() {\n      const requestUrl = `${path}geographicContext/space`;\n      const result = await axios.get(requestUrl);\n      const body = result.data;\n      console.log(body);\n      return body.children.find(b => b.type == \"geographicBuilding\");\n  },\n}\n\nmodule.exports = API;"],"mappings":";;;;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,IAAI,GAAG,+BAAb;AAEA,IAAMC,GAAG,GAAG;EACJC,gBADI,8BACe;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACfC,UADe,aACCH,IADD;cAAA;cAAA,OAEAF,KAAK,CAACM,GAAN,CAAUD,UAAV,CAFA;;YAAA;cAEfE,MAFe;cAGfC,IAHe,GAGRD,MAAM,CAACE,IAHC;cAIrBC,OAAO,CAACC,GAAR,CAAYH,IAAZ;cAJqB,iCAKdA,IAAI,CAACI,QAAL,CAAcC,IAAd,CAAmB,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAACC,IAAF,IAAU,oBAAd;cAAA,CAApB,CALc;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAMxB;AAPS,CAAZ;AAUAC,MAAM,CAACC,OAAP,GAAiBd,GAAjB"},"metadata":{},"sourceType":"script"}